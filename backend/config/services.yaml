# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      # W dowolnym servicie mozemy wstrzyknac parametr $projectDir zawierajacy aktualna sciezke do projektu na serwerze
      $scraperLogger: '@monolog.logger.scraper'
      $importerLogger: '@monolog.logger.importer'
      Nexy\Slack\Client: '@nexy_slack.client'
  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  App\BusinessLogic\Scraper\EventSubscriber\CreateMarketScraperCheckSubscriber:
    tags:
      - { name: doctrine.event_listener, event: postPersist }

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  Goutte\Client:
  GuzzleHttp\Client:
  League\Csv\Writer:

  app.upload_service.scraper:
    class: App\BusinessLogic\SharedLogic\Service\UploadService
    arguments:
      $uploadPath: '%kernel.project_dir%/var/storage/csv'

  app.upload_service.logger:
    class: App\BusinessLogic\SharedLogic\Service\UploadService
    arguments:
      $uploadPath: '%kernel.project_dir%/var/logs'

  App\BusinessLogic\SharedLogic\Service\CsvWriterService:
    arguments:
      $uploadService: '@app.upload_service.scraper'

  app.csv_writer_service.scraper:
    class: App\BusinessLogic\SharedLogic\Service\CsvWriterService
    calls:
      - method: setRecord
        arguments:
          $record: App\BusinessLogic\Scraper\Model\Record

  app.scraper_factory:
    class: App\BusinessLogic\Scraper\Factory\ScrapeMarketFactory
    arguments: [
      App\BusinessLogic\SharedLogic\Service\CrawlerService,
      '@app.csv_writer_service.scraper',
      App\BusinessLogic\SharedLogic\Service\SlackService,
      App\BusinessLogic\Scraper\Service\CheckerService,
      App\BusinessLogic\Scraper\Service\ScraperLogService
      ]

  App\BusinessLogic\Scraper\Factory\MarketScrapers\ElizowkaScraper:
    factory: ['@app.scraper_factory', createScraper]
    calls:
      - method: setConverter
        arguments:
          $converter: App\BusinessLogic\Scraper\Converter\ElizowkaConverter
    tags:
      - { name: 'app.scraper'}

  app.scraper_bronisze:
    class: App\BusinessLogic\Scraper\Factory\MarketScrapers\BroniszeScraper
    factory: ['@app.scraper_factory', createScraper]
    tags:
      - { name: 'app.scraper'}
